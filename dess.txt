%scaner_name compl12
%codes_type  Codes
%ident_name  Id
%codes 
   Number, Character, String,
   If,     Then,      Else,
   Assign, Plus,      Minus,
   Mul,    Div,       LP,
   RP
%idents {[:Letter:]|[:letter:]|_}{[:Letter:]|[:letter:]|_|[:digits:]}
%keywords
   "if" : If, "then" : Then, "else" : Else
%delimiters
   ":=" : Assign, "+" : Plus, "-" : Minus,
   "*"  : Mul,    "/" : Div
%strings 
   "scanner13();" : 
   "for(auto& c : buffer){
        c=to_upper(c);
    }"
   %action F "privet();"
   {"(""$F|[:ndq:]$write)*"}
%token_fields 
  "unsigned __int128 int_val;"
%class_members 
  "unsigned __int128 val_;"
%numbers "val_ = 0; token.code = Number;" : "token.int_val = val_;"
  %action addHexDigit "val_ = (val_ << 4) + digitToInt(ch);"
  %action addDecDigit "val_ = val_ * 10 + digitToInt(ch);"
  %action addBinDigit "val_ = (val_ << 1) + digitToInt(ch);"
  %action addOctDigit "val_ = (val_ << 3) + digitToInt(ch);"
  
  {0(x|X)[:xdigits:]$addHexDigit+ | [:digits:]$addDecDigit+ | 
   0(b|B)[:bdigits:]$addBinDigit+ | 0(o|O)[:odigits:]$addOctDigit+}